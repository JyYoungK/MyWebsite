{"version":3,"sources":["components/Cards/Cards.module.css","components/CountryPicker/CountryPicker.module.css","App.module.css","api/index.js","components/CountryPicker/CountryPicker.jsx","components/Cards/Cards.jsx","App.js","index.js"],"names":["module","exports","url","fetchData","country","a","changeableUrl","axios","get","data","confirmed","recovered","deaths","lastUpdate","fetchCountries","countries","map","name","Countries","handleCountryChange","useState","setCountries","useEffect","fetchAPI","FormControl","className","styles","formControl","NativeSelect","defaultValue","onChange","e","target","value","fonts","coronaAreaFont","i","key","Info","container","Date","toDateString","coronaInfected","coronaRecovered","coronaDead","App","state","setState","this","Cards","CountryPicker","React","Component","ReactDOM","render","document","getElementById"],"mappings":"4FACAA,EAAOC,QAAU,CAAC,UAAY,yBAAyB,eAAiB,8BAA8B,eAAiB,8BAA8B,gBAAkB,+BAA+B,WAAa,4B,mBCAnND,EAAOC,QAAU,CAAC,YAAc,qC,mBCAhCD,EAAOC,QAAU,CAAC,UAAY,uBAAuB,MAAQ,qB,iNCCvDC,EAAM,iCAECC,EAAS,uCAAG,WAAOC,GAAP,2BAAAC,EAAA,6DACnBC,EAAgBJ,EAEhBE,IACFE,EAAa,UAAMJ,EAAN,sBAAuBE,IAJf,kBAQgDG,IAAMC,IAAIF,GAR1D,2BAQbG,KAAQC,EARK,EAQLA,UAAWC,EARN,EAQMA,UAAWC,EARjB,EAQiBA,OAAQC,EARzB,EAQyBA,WARzB,kBAUd,CAAEH,YAAWC,YAAWC,SAAQC,eAVlB,2HAAH,sDA0BTC,EAAc,uCAAG,8BAAAT,EAAA,+EAEYE,IAAMC,IAAN,UAAaN,EAAb,eAFZ,uBAEVa,EAFU,EAElBN,KAAQM,UAFU,kBAInBA,EAAUC,KAAI,SAACZ,GAAD,OAAaA,EAAQa,SAJhB,wHAAH,qD,kCCDZC,EArBG,SAAC,GAA6B,IAA3BC,EAA0B,EAA1BA,oBAA0B,EACXC,mBAAS,IADE,mBACtCL,EADsC,KAC3BM,EAD2B,KAW7C,OARAC,qBAAU,YACM,uCAAG,sBAAAjB,EAAA,kEACfgB,EADe,SACIP,IADJ,6EAAH,qDAIdS,KACC,IAGD,kBAACC,EAAA,EAAD,CAAaC,UAAWC,IAAOC,aAC7B,kBAACC,EAAA,EAAD,CAAcC,aAAa,GAAGC,SAAU,SAACC,GAAD,OAAOZ,EAAoBY,EAAEC,OAAOC,SAC1E,4BAAQA,MAAM,GAAGR,UAAWS,IAAMC,gBAAlC,UACCpB,EAAUC,KAAI,SAACZ,EAASgC,GAAV,OAAgB,4BAAQC,IAAKD,EAAGH,MAAO7B,GAAUA,SCFzDkC,EAlBF,SAAC,GAA4D,IAAD,IAAzD7B,KAAQC,EAAiD,EAAjDA,UAAWC,EAAsC,EAAtCA,UAAWC,EAA2B,EAA3BA,OAAQC,EAAmB,EAAnBA,WAEpD,OAAKH,EAKH,yBAAKe,UAAWC,IAAOa,WACrB,yBAAKd,UAAaC,IAAOS,gBAAzB,qCACA,yBAAKV,UAAaC,IAAOS,gBAAiB,IAAIK,KAAK3B,GAAY4B,gBAC/D,6BACA,yBAAKhB,UAAaC,IAAOgB,gBAAzB,cAAqDhC,EAAUuB,OAC/D,yBAAKR,UAAaC,IAAOiB,iBAAzB,cAAsDhC,EAAUsB,OAChE,yBAAKR,UAAaC,IAAOkB,YAAzB,aAAgDhC,EAAOqB,OACvD,8BAXK,c,iBC8BIY,E,4MA7BbC,MAAQ,CACNrC,KAAM,GACNL,QAAS,I,EASXe,oB,uCAAsB,WAAOf,GAAP,eAAAC,EAAA,sEACDF,EAAUC,GADT,OACdK,EADc,OAGpB,EAAKsC,SAAS,CAAEtC,OAAML,QAASA,IAHX,2C,wPALDD,I,OAAbM,E,OAENuC,KAAKD,SAAS,CAAEtC,S,qIASR,IACAA,EAASuC,KAAKF,MAAdrC,KAER,OACE,yBAAKgB,UAAWC,IAAOa,WACrB,kBAACU,EAAD,CAAOxC,KAAMA,IACb,kBAACyC,EAAD,CAAe/B,oBAAqB6B,KAAK7B,2B,GAxB/BgC,IAAMC,WCDxBC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,gB","file":"static/js/main.38aa8828.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Cards_container__3bjn6\",\"coronaAreaFont\":\"Cards_coronaAreaFont__2BM_l\",\"coronaInfected\":\"Cards_coronaInfected__3uzXV\",\"coronaRecovered\":\"Cards_coronaRecovered__3sZlq\",\"coronaDead\":\"Cards_coronaDead__1Lo2z\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"CountryPicker_formControl__2p8f9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__1MQN3\",\"image\":\"App_image__3byI1\"};","import axios from 'axios';\n\nconst url = 'https://covid19.mathdro.id/api';\n\nexport const fetchData = async (country) => {\n  let changeableUrl = url;\n\n  if (country) {\n    changeableUrl = `${url}/countries/${country}`;\n  }\n\n  try {\n    const { data: { confirmed, recovered, deaths, lastUpdate } } = await axios.get(changeableUrl);\n\n    return { confirmed, recovered, deaths, lastUpdate };\n  } catch (error) {\n    return error;\n  }\n};\n\nexport const fetchDailyData = async () => {\n  try {\n    const { data } = await axios.get(`${url}/daily`);\n\n    return data.map(({ confirmed, deaths, reportDate: date }) => ({ confirmed: confirmed.total, deaths: deaths.total, date }));\n  } catch (error) {\n    return error;\n  }\n};\n\nexport const fetchCountries = async () => {\n  try {\n    const { data: { countries } } = await axios.get(`${url}/countries`);\n\n    return countries.map((country) => country.name);\n  } catch (error) {\n    return error;\n  }\n};\n","import React, { useState, useEffect } from 'react';\nimport { NativeSelect, FormControl } from '@material-ui/core';\n\nimport { fetchCountries } from '../../api';\n\nimport styles from './CountryPicker.module.css';\nimport fonts from '../Cards/Cards.module.css';\n\nconst Countries = ({ handleCountryChange }) => {\n  const [countries, setCountries] = useState([]);\n\n  useEffect(() => {\n    const fetchAPI = async () => {\n      setCountries(await fetchCountries());\n    };\n\n    fetchAPI();\n  }, []);\n\n  return (\n    <FormControl className={styles.formControl}>\n      <NativeSelect defaultValue=\"\" onChange={(e) => handleCountryChange(e.target.value)}>\n        <option value=\"\" className={fonts.coronaAreaFont}>Global</option>\n        {countries.map((country, i) => <option key={i} value={country}>{country}</option>)}\n      </NativeSelect>\n    </FormControl>\n  );\n};\n\nexport default Countries;\n","import React from 'react';\nimport styles from './Cards.module.css';\n\nconst Info = ({ data: { confirmed, recovered, deaths, lastUpdate } }) => {\n  \n  if (!confirmed) {\n    return 'Loading...';\n  }\n\n  return (\n    <div className={styles.container}>\n      <div className = {styles.coronaAreaFont}>Following Information up to date:</div>\n      <div className = {styles.coronaAreaFont}>{new Date(lastUpdate).toDateString()}</div>\n      <br></br>\n      <pre className = {styles.coronaInfected}>Infected : {confirmed.value}</pre>\n      <pre className = {styles.coronaRecovered}>Recovered: {recovered.value}</pre>\n      <pre className = {styles.coronaDead}>  Dead  : {deaths.value}</pre>\n      <br></br>\n    </div>\n  );\n};\nexport default Info;\n","import React from 'react';\n\nimport { Cards, CountryPicker } from './components';\nimport { fetchData } from './api/';\nimport styles from './App.module.css';\n\nclass App extends React.Component {\n  state = {\n    data: {},\n    country: '',\n  }\n\n  async componentDidMount() {\n    const data = await fetchData();\n\n    this.setState({ data });\n  }\n\n  handleCountryChange = async (country) => {\n    const data = await fetchData(country);\n\n    this.setState({ data, country: country });\n  }\n\n  render() {\n    const { data } = this.state;\n\n    return (\n      <div className={styles.container}>\n        <Cards data={data} />\n        <CountryPicker handleCountryChange={this.handleCountryChange} />\n      </div>\n    );\n  }\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('coronadiv'));\n"],"sourceRoot":""}